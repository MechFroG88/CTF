from Crypto.Util.number import bytes_to_long, getPrime, inverse , long_to_bytes
from sage.all import *
import gmpy2

e = 3
n = 12347696940735308159336942518173178401874674491867306922645115868632426263964231113097583957956183361426778356416075914597235887950043631950563862799996133925682392096331658789374826642681055249581593003412423341934243031151004756517592393697749543561760132186368071977037696888299304522604251918936166237274201750067911465624300770908336407664236994203929101406056321619072494676558682063692239441940018176893932015284519392954611782585431656477458448763193381733719728837548862998134761355628237891794710112234315988650802560891245602356429586822889315936846625464888803127285892159292149289673458109351724903086803
c = 5897957922223441188825594255257835819006230367001617301179785570623023779465537312041037941519704227640821984492086969809422161518008323488448656985160390569355279765950734330893731740324577949202728151404647873397934487942225402189861939866540391736775114939487107339570819813308379101948618462603866809128160866225318521370611471032953123400939345060228341028375669687182551172924880396397268740711987556039442331528840484262826791008181666680326701046216691485707346001390863511507937815593044903945838772539261078258307086547224375421686900426432365179002351497222850038085907923982615258904065986164244731706227
R,x = objgen(PolynomialRing(Zmod(n),'x'))
poly = (x**2 + 3*x + 2**1000)**e - c
print(long_to_bytes(poly.small_roots(X = 2**(11*8))[0]))


